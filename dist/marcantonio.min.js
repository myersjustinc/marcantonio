/*! Marcantonio.js - v0.1.0 - 2012-11-14
 * https://github.com/myersjustinc/marcantonio
 * Copyright (c) 2012 Justin Myers; Licensed BSD */
(function(e){"use strict";var t=e.Marc||{};e.Marc=t,t.Area=function(n,r,i){var s=this;this.element=n.paper.path(i),this.name=r,this.getFill=function(){return s.element.attr("fill")},this.setFill=function(t){s.element.attr("fill",t)},this.getStroke=function(){return s.element.attr("stroke")},this.setStroke=function(t){s.element.attr("stroke",t)},this.data=function(){return this.element.data.apply(this.element,arguments)},this.removeData=function(){return this.element.removeData.apply(this.element,arguments)},this.setValue=function(n){s.data(t.valueKey,n)},this.unsetValue=function(n){s.removeData(t.valueKey)},this.getValue=function(){return s.data(t.valueKey)};var o={};this.addEvent=function(t,n){o[t]||(o[t]=[]);var r=function(e){n.call(s,s,e)};o[t].push(r);for(var i=0,u=o[t].length;i<u;i++){var a=o[t][i];s.element["un"+t](a),s.element[t](a)}},this.removeEvent=function(t){if(!o[t])return;for(var n=0,r=o[t].length;n<r;n++){var i=o[t][n];s.element["un"+t](i)}o[t]=o[t].splice(o[t].length)}}})(this),function(e){"use strict";var t=e.Marc||{};e.Marc=t,t.R=e.Raphael,t.valueKey="marcantonio-value"}(this),function(e){"use strict";var t=e.Marc||{};e.Marc=t,t.Drawing=function(r){var i=this,s;if(typeof r=="string")s=e.document.getElementById(r);else if(typeof r.append=="function")s=r[0];else{if(typeof r.nodeName!="string")throw new Error("Invalid argument for Drawing container");s=r}this.paper=t.R(s);var o={};this.addView=function(n,r){return o[n]&&o[n].destroy(),o[n]=new t.View(i,r),o[n]},this.getView=function(t){return o[t]},this.hideAllViews=function(){for(var t in o)o.hasOwnProperty(t)&&o[t].hide()},this.showView=function(t){if(!o[t])return;i.hideAllViews(),o[t].show()}}}(this),function(e){"use strict";var t=e.Marc||{};e.Marc=t,t.View=function(n,r){r=r||{},n.hideAllViews();var i=this;this.areas={};for(var s in r)r.hasOwnProperty(s)&&(this.areas[s]=new t.Area(n,s,r[s]));this.hide=function(){for(var t in i.areas)i.areas.hasOwnProperty(t)&&i.areas[t].element.hide()},this.show=function(){for(var t in i.areas)i.areas.hasOwnProperty(t)&&i.areas[t].element.show()},this.destroy=function(){for(var t in i.areas)i.areas.hasOwnProperty(t)&&i.areas[t].element.remove()},this.setColors=function(t){for(var n in i.areas)if(i.areas.hasOwnProperty(n)){var r=i.areas[n];r.setFill(t(r))}},this.setStrokes=function(t){for(var n in i.areas)if(i.areas.hasOwnProperty(n)){var r=i.areas[n];r.setStroke(t(r))}},this.setValues=function(t){for(var n in i.areas)if(i.areas.hasOwnProperty(n)){var r=i.areas[n];r.setValue(t[n])}},this.unsetValues=function(t){for(var n in i.areas)if(i.areas.hasOwnProperty(n)){var r=i.areas[n];r.unsetValue()}},this.getValues=function(){var t={};for(var n in i.areas)if(i.areas.hasOwnProperty(n)){var r=i.areas[n];t[n]=r.getValue()}return t},this.addEvents=function(t,n){for(var r in i.areas)if(i.areas.hasOwnProperty(r)){var s=i.areas[r];s.addEvent(t,n)}},this.removeEvents=function(t){for(var n in i.areas)if(i.areas.hasOwnProperty(n)){var r=i.areas[n];r.removeEvent(t)}}}}(this);